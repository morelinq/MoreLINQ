#nullable enable
MoreLinq.Extensions.SpillHeadExtension
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, int count, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, int count, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, bool>! predicate, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, bool>! predicate, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, TMatch, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, (bool, TMatch)>! matcher, System.Func<System.Collections.Generic.List<TMatch>!, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, TMatch, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, (bool, TMatch)>! matcher, System.Func<System.Collections.Generic.List<TMatch>!, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, TMatch, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, (bool, TMatch)>! matcher, System.Func<TState>! empty, System.Func<TMatch, TState>! seeder, System.Func<TState, TMatch, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, TMatch, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, (bool, TMatch)>! matcher, System.Func<TState>! empty, System.Func<TMatch, TState>! seeder, System.Func<TState, TMatch, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, bool>! predicate, System.Func<TState>! empty, System.Func<T, TState>! seeder, System.Func<TState, T, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, bool>! predicate, System.Func<TState>! empty, System.Func<T, TState>! seeder, System.Func<TState, T, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.Extensions.SpillHeadExtension.SpillHead<T>(this System.Collections.Generic.IEnumerable<T>! source) -> System.Collections.Generic.IEnumerable<(T Head, T Item)>!
static MoreLinq.MoreEnumerable.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, int count, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, int count, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, bool>! predicate, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, bool>! predicate, System.Func<System.Collections.Generic.List<T>!, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, TMatch, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, (bool, TMatch)>! matcher, System.Func<System.Collections.Generic.List<TMatch>!, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, TMatch, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, (bool, TMatch)>! matcher, System.Func<System.Collections.Generic.List<TMatch>!, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, TMatch, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, (bool, TMatch)>! matcher, System.Func<TState>! empty, System.Func<TMatch, TState>! seeder, System.Func<TState, TMatch, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, TMatch, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, (bool, TMatch)>! matcher, System.Func<TState>! empty, System.Func<TMatch, TState>! seeder, System.Func<TState, TMatch, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, bool>! predicate, System.Func<TState>! empty, System.Func<T, TState>! seeder, System.Func<TState, T, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T, TState, THead, TResult>(this System.Collections.Generic.IEnumerable<T>! source, System.Func<T, int, bool>! predicate, System.Func<TState>! empty, System.Func<T, TState>! seeder, System.Func<TState, T, TState>! accumulator, System.Func<TState, THead>! headerSelector, System.Func<THead, T, int, TResult>! resultSelector) -> System.Collections.Generic.IEnumerable<TResult>!
static MoreLinq.MoreEnumerable.SpillHead<T>(this System.Collections.Generic.IEnumerable<T>! source) -> System.Collections.Generic.IEnumerable<(T Head, T Item)>!
